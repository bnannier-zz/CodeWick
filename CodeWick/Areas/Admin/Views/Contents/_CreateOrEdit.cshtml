@model CodeWick.Models.Content
@using CodeWick.Models;
@using CodeWick.Helpers;
@using System.Web;

@* This partial view defines form fields that will appear when creating and editing entities *@
<script src="/Scripts/tinymce/jquery.tinymce.js" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $('#Body').tinymce({
            // Location of TinyMCE script
            script_url: '/Scripts/tinymce/tiny_mce.js',
            theme: "advanced",

            height: "500",
            width: "750",
            verify_html: false,
            plugins: "pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,autosave",

            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak,restoredraft,codehighlighting,netadvimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: false,

            // Example content CSS (should be your site CSS)
            content_css: '@Url.Content("~/Content/Themes/" + (((Theme)Session["theme"]).Abbreviation) + "/CSS/Site/Content.css")',
            convert_urls: false,

            // Drop lists for link/image/media/template dialogs
            template_external_list_url: "lists/template_list.js",
            external_link_list_url: "lists/link_list.js",
            external_image_list_url: "lists/image_list.js",
            media_external_list_url: "lists/media_list.js"
        });
    });
</script>

<script type="text/javascript">
    $(function () { $(".datefield").datepicker(); });
</script>

<div class="editor-label">
    @Html.LabelFor(model => model.SEOURL)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.SEOURL)
    @Html.ValidationMessageFor(model => model.SEOURL)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Title)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Title)
    @Html.ValidationMessageFor(model => model.Title)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Body)<br />
    <span style="font-size: xx-small;">http://@(((Setting)Session["setting"]).URL)/content/uploads/</span>
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Body)
    @Html.ValidationMessageFor(model => model.Body)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CSS)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.CSS)
    @Html.ValidationMessageFor(model => model.CSS)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CreatedDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.CreatedDate)
    @Html.ValidationMessageFor(model => model.CreatedDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.LastUpdate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.LastUpdate)
    @Html.ValidationMessageFor(model => model.LastUpdate)
</div>


<div class="editor-label">
    Category
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.CategoryId, ((IEnumerable<CodeWick.Models.Category>)ViewBag.PossibleCategories).Select(option => new SelectListItem {
        Text = (option.Title == null ? "None" : option.Title), 
        Value = option.CategoryId.ToString(),
        Selected = (Model != null) && (option.CategoryId == Model.CategoryId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.CategoryId)
</div>
