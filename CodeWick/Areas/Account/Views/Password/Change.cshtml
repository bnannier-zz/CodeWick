@model CodeWick.Areas.Account.Models.PasswordModel
@using CodeWick.Models;
@using CodeWick.Helpers;
@using System.Web;

@{
    Layout = "~/Content/Themes/" + ((Theme)Session["theme"]).Abbreviation + "/Layouts/Account/_Account.cshtml";
    ViewBag.Title = ((Setting)Session["setting"]).SiteName + ": Change Password";
}

@section AddToHead{
    <link href="@Url.Content("~/Content/Themes/" + (((Theme)Session["theme"]).Abbreviation) + "/CSS/Account/Account.css")" rel="stylesheet" type="text/css" />
}

@using (Html.BeginForm()) {
<div id="account">
    <div class="title"><h2>Change Password</h2></div>
    <div class="content">
        <p>Use the form below to change your password. </p>
        <p>New passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.</p>

        @Html.ValidationSummary(true, "Password change was unsuccessful. Please correct the errors and try again.")

        <div class="editor-label">@Html.LabelFor(m => m.OldPassword)</div>
        <div class="editor-field">
            @Html.PasswordFor(m => m.OldPassword)
            @Html.ValidationMessageFor(m => m.OldPassword)
        </div>

        <div class="editor-label">@Html.LabelFor(m => m.NewPassword)</div>
        <div class="editor-field">
            @Html.PasswordFor(m => m.NewPassword)
            @Html.ValidationMessageFor(m => m.NewPassword)
        </div>

        <div class="editor-label">@Html.LabelFor(m => m.ConfirmPassword)</div>
        <div class="editor-field">
            @Html.PasswordFor(m => m.ConfirmPassword)
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </div>

        <div class="editor-button">
	        <button id="btn_change" type="submit" name="change" ><img src="@Url.Content("~/Content/Themes/" + (((Theme)Session["theme"]).Abbreviation) + "/Images/btn_change.png")" alt=""/></button>
        </div>
    </div>
</div>
}